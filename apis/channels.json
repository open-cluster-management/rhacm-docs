{
  "swagger": "2.0",
  "info": {
    "description": "This documentation is for the Channel resource for Red Hat Advanced Cluster Management for Kubernetes. The Channel resource has four possible requests: create, query, delete and update.",
    "version": "1.0.0",
    "title": "Channels (channels.apps.open-cluster-management.io) APIs",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "basePath": "/kubernetes/apis",
  "tags": [
    {
      "name": "channels.apps.open-cluster-management.io",
      "description": "Create and manage deployables"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/apps.open-cluster-management.io/v1/namespaces/{namespace}/channels": {
      "post": {
        "tags": [
          "channels.apps.open-cluster-management.io"
        ],
        "summary": "Create a channel",
        "description": "Create a channel.",
        "operationId": "createChannel",
        "consumes": [
          "application/yaml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Parameters describing the deployable to be created.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Channel"
            }
          },
          {
            "in": "path",
            "name": "namespace",
            "description": "Namespace that you want to use, for example, default.",
            "required": true,
            "type": "string"
          },
          {
            "name": "COOKIE",
            "in": "header",
            "description": "Authorization: Bearer {ACCESS_TOKEN} ; ACCESS_TOKEN is the user access token.",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Access forbidden"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal service error"
          },
          "503": {
            "description": "Service unavailable"
          }
        }
      },
      "get": {
        "tags": [
          "channels.apps.open-cluster-management.io"
        ],
        "summary": "Query all channels for the target namespace",
        "description": "Query your channels for more details.",
        "operationId": "queryChannels",
        "consumes": [
          "application/yaml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "description": "Namespace that you want to use, for example, default.",
            "required": true,
            "type": "string"
          },
          {
            "name": "COOKIE",
            "in": "header",
            "description": "Authorization: Bearer {ACCESS_TOKEN} ; ACCESS_TOKEN is the user access token.",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Access forbidden"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal service error"
          },
          "503": {
            "description": "Service unavailable"
          }
        }
      }
    },
    "/apps.open-cluster-management.io/v1/namespaces/{namespace}/channels/{channel_name}": {
      "get": {
        "tags": [
          "channels.apps.open-cluster-management.io"
        ],
        "summary": "Query a single channels of a namespace",
        "description": "Query a single channels for more details.",
        "operationId": "queryChannel",
        "parameters": [
          {
            "name": "channel_name",
            "in": "path",
            "description": "Name of the deployable that you wan to query.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "namespace",
            "description": "Namespace that you want to use, for example, default.",
            "required": true,
            "type": "string"
          },
          {
            "name": "COOKIE",
            "in": "header",
            "description": "Authorization: Bearer {ACCESS_TOKEN} ; ACCESS_TOKEN is the user access token.",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Access forbidden"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal service error"
          },
          "503": {
            "description": "Service unavailable"
          }
        }
      },
      "delete": {
        "tags": [
          "channels.apps.open-cluster-management.io"
        ],
        "summary": "Delete a Channel",
        "description": "",
        "operationId": "ChannelDeployable",
        "parameters": [
          {
            "name": "channel_name",
            "in": "path",
            "description": "Name of the Channel that you want to delete.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "namespace",
            "description": "Namespace that you want to use, for example, default.",
            "required": true,
            "type": "string"
          },
          {
            "name": "COOKIE",
            "in": "header",
            "description": "Authorization: Bearer {ACCESS_TOKEN} ; ACCESS_TOKEN is the user access token.",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Access forbidden"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal service error"
          },
          "503": {
            "description": "Service unavailable"
          }
        }
      }
    }
  },
  "definitions": {
    "Channel": {
      "type": "object",
      "required": [
        "apiVersion",
        "kind",
        "metadata",
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "type": "object"
        },
        "spec": {
          "type": "object",
          "required": [
            "pathname",
            "type"
          ],
          "properties": {
            "pathname": {
              "type": "string"
            },
            "sourceNamespaces": {
              "items": {
                "type": "string",
                "enum": [
                  "Namespace",
                  "HelmRepo",
                  "ObjectBucket",
                  "GitHub",
                  "namespace",
                  "helmrepo",
                  "objectbucket",
                  "github"
                ]
              },
              "type": "array"
            },
            "secretRef": {
              "description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
              "properties": {
                "apiVersion": {
                  "description": "API version of the referent.",
                  "type": "string"
                },
                "fieldPath": {
                  "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
                  "type": "string"
                },
                "kind": {
                  "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                  "type": "string"
                },
                "resourceVersion": {
                  "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
                  "type": "string"
                },
                "uid": {
                  "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "configMapRef": {
              "description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
              "properties": {
                "apiVersion": {
                  "description": "API version of the referent.",
                  "type": "string"
                },
                "fieldPath": {
                  "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
                  "type": "string"
                },
                "kind": {
                  "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                  "type": "string"
                },
                "resourceVersion": {
                  "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
                  "type": "string"
                },
                "uid": {
                  "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "gates": {
              "description": "ChannelGate defines criteria for promote to channel",
              "properties": {
                "annotations": {
                  "description": "typical annotations of k8s",
                  "type": "object",
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "labelSelector": {
                  "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
                  "properties": {
                    "matchExpressions": {
                      "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                      "items": {
                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                        "properties": {
                          "key": {
                            "description": "key is the label key that the selector applies to.",
                            "type": "string"
                          },
                          "operator": {
                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                            "type": "string"
                          },
                          "values": {
                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "required": [
                          "key",
                          "operator"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "matchLabels": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "name": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "example": {
        "apiVersion": "apps.open-cluster-management.io/v1",
        "kind": "Channel",
        "metadata": null,
        "name": "sample-channel",
        "namespace": "default",
        "spec": {
          "type": "GitHub",
          "pathname": "https://github.com/IBM/charts.git",
          "configMapRef": {
            "name": "bookinfo-resource-filter-configmap",
            "kind": "configmap"
          }
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger.",
    "url": "http://swagger.io"
  }
}
